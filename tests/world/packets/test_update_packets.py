from wlink import Guid
from wlink.world.packets import (
    SMSG_UPDATE_OBJECT,
    SMSG_DESTROY_OBJECT,
    SMSG_COMPRESSED_UPDATE_OBJECT,
    ObjectType,
)


def test_SMSG_UPDATE_OBJECT():
    data = b"\x00_\xa9\x00\x01\x00\x00\x00\x02\xc1\x04\xc0\x1f\x05R\x02~?\x83\xc5U&\xba\xc3\x00\x00\x00\x00\xfa\x7f\xd8?\x04\x00\x00\x00\xbf\x05\xa3\x03\x00\x00\x00\x00\x00\x00\x00\x00\x01\x1fc\x03\x00\x04\x00\x00\x00\x00\x00\xc0\x1f!\x00\x00\x00g\xb0\x02\x00\x00\x00\x80?\xc7\x0b\x00\x00(\x00\x00\x00\x00\x00\x80?\x00\x00\x00\xffg\x83\x03\x00\x01\x0f\x00\xff"
    packet = SMSG_UPDATE_OBJECT.parse(data)
    print(packet)


def test_SMSG_COMPRESSED_UPDATE_OBJECT():
    data = b'\x00(\xf6\x01\xc0\x00\x00\x00x\x01cd\x00\x02FF- \xc9\x0cb24\xb0\x80\xa9\xc1J|Ra`\x90\x92@\xb8\x0e\x00\x91"\x01\xfd'
    packet = SMSG_COMPRESSED_UPDATE_OBJECT.parse(data)
    print(packet)

    contents = packet.updates[0].contents
    print(f"{contents=}")
    assert contents.guid == Guid(value=0x1FC0000000000004)
    assert contents.type == ObjectType.game_object

    data = b"\x02\x98\xf6\x01;\x06\x00\x00x\x01\x85\x94Kh\x13Q\x14\x86\xcfLb\x1bHJ&\xc4\xfa~D\x88\xb6\xd8@\xe3FW\x9aI6jQ\x10q_\x14]t\xd1E\xbbq;4n\xdc\x95B)-\xf8\xc0\x95\x82\x82\x05\xb1\x15DZ\x0bJ\x85\x8a]t\x11J1\x01\x17.\xbb)(\xa8\xf5\xff\xcf\xdcK&(\xcc\x81s\xffs\xee\xdco\xee\xcc\xb9\x8f\xac\x88\xb8\xf5t\xb7\xefx\x92\xeeF<\\E\x0f\x8c\t\xccO\xa09\xa5aP)C\xe9\x0e\xdc\xad\xf7(\xd4\x13\x81\xcaL`\n\xf5i\xd8\t\xe5\xd1w\x10\xee\xd6\xb3\ng#\xb00\x81)\xdc\xafa'\xec\xd6s\n\xe5\"P\x99\x89\x85\xc6\xdf3\xec\x84z\xd1\x13\xce\x98W8\x1f\xc2\x05\x8e\x14&0\x9d\xb1x\x98a'\x1c\xfe\xe7j\x86\xc5Y\xcdhq\xd8%\x9a@\x14|6\xc1\x9e6\xb8\x17\xd9.\xcc\xad\xaf)\xb8\x16\x05\x99\xc0\x14|\x9bc\xf8?p]\xc1\xf5(\xc8\x04\x16\x03n(\xb8\x11\x05\x99\xc4\x83\r\x05\x1bQ\x90I<\xb8\xa5\xe0V\x14d\x12\x0f\xb6\x14lEA&\xf1\xe0\xb6\x82\xdbQ\x90I<8\x98\xe2:\x0e\xa6t\x1d\x0b\n0\x81iU\xef/2l/\x077>W\x9b\x9ep\xca\xc9\x9bP\xda\xd1\xe6\xd5\xd4\xf8\xab\x99\xe5\x91\xe5w+\x8b\xc7\xee\xd6>\xdfY\xa8\x84O\n\xbeH\x13>\xe9\x8f\x1d\x99\x81\xb6\xf3f\xf6\xb2\xbf\xb2s\xc9?\xdd+AnZ\x96~|\rvN`\xee\xa1.\xb9\x17\xee\xc1\xf0\r\xdaN\xb8\xe2J&+\x19\xf9\xb5\x9b\x8d\xf4\xb7C~\x9a\xda\xfc\xe8\xe6\xeb\xd1\xcd.\x9b\xc6j9\x15xR\x13Iz\xfaq\x1c\x9f\x94?\x14\x9f\x8d\x04l*^x\xcaylX\x10\xc7\x11g\xfa\xa4\xc8md\xd4\xef\x98\x9e1\xf5\x1a\x94\x05\xd2:j\xe3\xcb\x8d\xb4\xc8\x17\xfc\x15\xdd\x1d\xf8xAd\xa9r\x06c\xe8s\xb3?ks\xb3\xbf\xf1\t\xb4@\x0b\xc7\xba\x8f\xc1\x9f\xc2\x8b\xf0\xf3p\xbe\xf3\x1b\xfc\xcdq\x91+\xae\xc8\x02\xe2\xa9b\xa3:UlU\xf5\x9b\xcc\x98TbO\x12\xd3\xba\xbc\xa1\xfa\xe0\xfdp^\x03\xf6\xf6\xb2\x17\x92\xbd[\xecuaO>O5\xcc\xb7\xe7\xd2\x1e3{j\xec!\xb0{\xdanQ\xbb\xe3\xec\x06\xc2;\x92\x87\xd0\xa0T2\xa0:\xe9\x94\x8c\x9e5z\xce\xe8\xb0\xd1[\xd0\x92Sr\x1e\x9b\xfc\x89\xd1\xe7F_\x18}i\xf4\x01\x8a\xc2\xf7?4\xfa\xc8\xe8\xbc\xd1\x8b\x18\x87R\tw\xc7u8\xcc\x0fT\xb0\x82I\r<\x1d \x9e\xf7I>\x0c\x85\xf5\xe7\x1a\xfc\xeb\xbc\xc0\xb8\xb6\xbc>\xf7\xc1\xf7\xc3\x0f\xc0\xb9'\xf8\x9f\\\xb8\xbf\xc6\xb5\xd2\x12"
    packet = SMSG_COMPRESSED_UPDATE_OBJECT.parse(data)
    print(packet)


def test_SMSG_DESTROY_OBJECT():
    data = b"\x00\x0b\xaa\x00\x06\x00\x00\x00\x00\x00\x00\xf1\x00"
    packet = SMSG_DESTROY_OBJECT.parse(data)
    print(packet)

    assert packet.guid == Guid(value=0xF100000000000006)
    assert not packet.player
